- hosts: docker-vm
  roles:
    - base
    - user
    - docker
    - deploy_watchtower
    - rclone
  tasks:

    # install pymysql dependency on host
    - name: install python3 pymysql 
      become: yes
      apt:
        name: python3-pymysql

    # need to make sure this proxy network exists first, before running compose files
    - name: Create proxy network for traefik and containers
      community.docker.docker_network:
        name: proxy

    # setup bookstack
    - name: setup bookstack
      import_tasks: setup-bookstack.yaml

    - name: creating required directories
      file:
        path: "/home/{{ ansible_user }}/docker/{{ item }}"
        state: directory
      loop:
          - syncthing
          - syncthing/data
          - portainer
          - portainer/data
          - adminer
          - pgadmin
          - paperless-ng
          - paperless-ng/data
          - paperless-ng/media
          - paperless-ng/export
          - paperless-ng/consume

    - name: copy docker compose files
      template:
        src: "templates/docker-compose/{{ item.file }}"
        dest: "/home/{{ ansible_user }}/docker/{{ item.name }}/docker-compose.yaml"
      loop:
        - { name: "portainer", file: "portainer.j2" }
        - { name: "adminer", file: "adminer.j2" }
        - { name: "pgadmin", file: "pgadmin.j2" }
        - { name: "syncthing", file: "syncthing.j2" }
        - { name: "paperless-ng", file: "paperless-ng.j2" }

    - name: copy env files
      copy:
        src: "templates/env/{{ item.file }}"
        dest: "/home/{{ ansible_user }}/docker/{{ item.name }}/.env"
      loop:
         - { name: "syncthing", file: "syncthing.env" }

    - name: copy pgadmin env file
      template:
        src: templates/env/pgadmin.j2
        dest: /home/{{ ansible_user }}/docker/pgadmin/.env

    - name: copy paperless-ngx env file
      template:
        src: templates/env/paperless-ng.j2
        dest: /home/{{ ansible_user }}/docker/paperless-ng/.env

    - name: setup traefik
      import_tasks: setup-traefik.yaml

    - name: run containers
      community.docker.docker_compose:
        project_src: "/home/{{ ansible_user }}/docker/{{ item }}"
        restarted: true
        files:
          - docker-compose.yaml
      loop:
        - portainer
        - adminer
        - pgadmin
        - syncthing
        - paperless-ng
      register: output

    - ansible.builtin.debug:
        var: output