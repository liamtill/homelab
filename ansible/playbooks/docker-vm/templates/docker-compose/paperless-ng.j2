# docker-compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# SQLite is used as the database. The SQLite file is stored in the data volume.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker-compose pull'.
# - Run 'docker-compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker-compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.4"
services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - proxy

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - broker
    # ports:
    #   - "8000:8000"
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless-ng.entrypoints=http"
      - "traefik.http.routers.paperless-ng.rule=Host(`{{ paperless_ng }}`)"
      - "traefik.http.middlewares.paperless-ng-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.paperless-ng.middlewares=paperless-ng-https-redirect"
      - "traefik.http.routers.paperless-ng-secure.entrypoints=https"
      - "traefik.http.routers.paperless-ng-secure.rule=Host(`{{ paperless_ng }}`)"
      - "traefik.http.routers.paperless-ng-secure.tls=true"
      - "traefik.http.routers.paperless-ng-secure.service=paperless-ng"
      - "traefik.http.services.paperless-ng.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"
  
    # healthcheck:
    #   test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    volumes:
      - ./data:/usr/src/paperless/data
      - ./media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file: .env
    environment:
      PAPERLESS_REDIS: redis://broker:6379


volumes:
  redisdata:

networks:
  proxy:
    external: true